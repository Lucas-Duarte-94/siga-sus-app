services:
  # Database Services
  postgres:
    image: postgres:latest
    container_name: siga-sus-postgres
    environment:
      POSTGRES_DB: siga-sus-app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - siga-sus-network

  # Microservices
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: siga-sus-api-gateway
    ports:
      - "8080:8080"
    environment:
      AUTH_SERVICE_ROUTE_URI: http://auth-service:8081
      CLINICAL_ENGINE_QUARKUS_ROUTE_URI: http://clinical-engine-quarkus:8082
      GRPC_CLIENT_TOKEN_VALIDATION_HOST: static://auth-service:9091
    networks:
      - siga-sus-network

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: siga-sus-auth-service
    depends_on:
      - postgres
      - api-gateway
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/siga-sus-app
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8081:8081"
      - "9091:9091"
    networks:
      - siga-sus-network

  clinical-engine-quarkus:
    build:
      context: ./clinical-engine-quarkus
      dockerfile: Dockerfile
    depends_on:
      - api-gateway
    environment:
      QUARKUS_HTTP_PORT: 8082
      GEMINI_API_KEY: KEY_HERE
    ports:
      - "8082:8082"
    networks:
      - siga-sus-network


networks:
  siga-sus-network:
    driver: bridge

volumes:
  postgres_data:
